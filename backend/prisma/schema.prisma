generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MedicalHistory {
  id            Int      @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now())
  userId        Int
  condition     String
  diagnosisDate DateTime
  medications   String?
  notes         String?
  user          User     @relation(fields: [userId], references: [id])
  symptoms      Symptoms[] //one to many relation
}

model Allergies {
  id       Int      @id @default(autoincrement())
  userId   Int
  trigger  String
  severity Int
  reaction String
  notes    String?
  date     DateTime @default(now())
  user     User     @relation(fields: [userId], references: [id])
}

model Symptoms {
  id       Int      @id @default(autoincrement())
  userId   Int
  symptoms String[]
  name     String
  severity Int     // going to be a scale
  duration String
  notes    String?
  date     DateTime @default(now())
  diagnosis MedicalHistory? @relation(fields: [diagnosisId], references: [id])
  diagnosisId Int?
  user     User     @relation(fields: [userId], references: [id])
}

model Hospital {
  id             Int              @id @default(autoincrement())
  name           String
  address        String
  region         String
  latitude       Float?
  longitude      Float?
  phone          String?
  specializations String[]
}

model User {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now())
  username       String?         @unique
  password       String?
  email          String?           @unique
  location       String?
  age            Int?
  gender         String?
  weight         Int?
  height         Int?
  symptoms       Symptoms[]
  allergies      Allergies[]
  medicalHistory MedicalHistory[]
  preExistingConditions String[]
}
